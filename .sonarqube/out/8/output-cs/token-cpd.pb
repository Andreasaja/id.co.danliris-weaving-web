Ÿ
äD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Beams\Repositories\BeamRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
Beams0 5
.5 6
Repositories6 B
{ 
public 

class 
BeamRepository 
:  !
AggregateRepostory" 4
<4 5
BeamDocument5 A
,A B
BeamReadModelC P
>P Q
,Q R
IBeamRepositoryS b
{		 
	protected

 
override

 
BeamDocument

 '
Map

( +
(

+ ,
BeamReadModel

, 9
	readModel

: C
)

C D
{ 	
return 
new 
BeamDocument #
(# $
	readModel$ -
)- .
;. /
} 	
} 
} Ñ	
ßD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\DailyOperations\Loom\Repositories\DailyOperationLoomRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
DailyOperations0 ?
.? @
Loom@ D
.D E
RepositoriesE Q
{ 
public 

class (
DailyOperationLoomRepository -
:. /
AggregateRepostory0 B
<B C&
DailyOperationLoomDocumentC ]
,] ^'
DailyOperationLoomReadModel_ z
>z {
,{ |*
IDailyOperationLoomRepository	} ö
{		 
	protected

 
override

 &
DailyOperationLoomDocument

 5
Map

6 9
(

9 :'
DailyOperationLoomReadModel

: U
	readModel

V _
)

_ `
{ 	
return 
new &
DailyOperationLoomDocument 1
(1 2
	readModel2 ;
); <
;< =
} 	
} 
} û	
´D:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\DailyOperations\Sizing\Repositories\DailyOperationSizingRepository.cs
	namespace		 	
Manufactures		
 
.		 
Data		 
.		 
EntityFrameworkCore		 /
.		/ 0
DailyOperations		0 ?
.		? @
Sizing		@ F
.		F G
Repositories		G S
{

 
public 

class *
DailyOperationSizingRepository /
:0 1
AggregateRepostory2 D
<D E(
DailyOperationSizingDocumentE a
,a b*
DailyOperationSizingReadModel	c Ä
>
Ä Å
,
Å Ç-
IDailyOperationSizingRepository
É ¢
{ 
	protected 
override (
DailyOperationSizingDocument 7
Map8 ;
(; <)
DailyOperationSizingReadModel< Y
	readModelZ c
)c d
{ 	
return 
new (
DailyOperationSizingDocument 3
(3 4
	readModel4 =
)= >
;> ?
} 	
} 
} ‰⁄
xD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\EntityRegistrar.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
{ 
public 

class 
EntityRegistrar  
:! "
IEntityRegistrar# 3
{ 
public 
void 
RegisterEntities $
($ %
ModelBuilder% 1
modelBuilder2 >
)> ?
{ 	
modelBuilder 
. 
Entity 
<  
BeamReadModel  -
>- .
(. /
etb/ 2
=>3 5
{   
etb!! 
.!! 
ToTable!! 
(!! 
$str!! 3
)!!3 4
;!!4 5
etb"" 
."" 
HasKey"" 
("" 
e"" 
=>"" 
e""  !
.""! "
Identity""" *
)""* +
;""+ ,
etb$$ 
.$$ 
Property$$ 
($$ 
p$$ 
=>$$ !
p$$" #
.$$# $
Number$$$ *
)$$* +
.$$+ ,
HasMaxLength$$, 8
($$8 9
$num$$9 <
)$$< =
;$$= >
etb%% 
.%% 
Property%% 
(%% 
p%% 
=>%% !
p%%" #
.%%# $
Type%%$ (
)%%( )
.%%) *
HasMaxLength%%* 6
(%%6 7
$num%%7 :
)%%: ;
;%%; <
etb'' 
.'' 
ApplyAuditTrail'' #
(''# $
)''$ %
;''% &
etb(( 
.(( 
ApplySoftDelete(( #
(((# $
)(($ %
;((% &
})) 
))) 
;)) 
modelBuilder++ 
.++ 
Entity++ 
<++  &
DailyOperationSizingDetail++  :
>++: ;
(++; <
etb++< ?
=>++@ B
{,, 
etb-- 
.-- 
ToTable-- 
(-- 
$str-- A
)--A B
;--B C
etb.. 
... 
HasKey.. 
(.. 
e.. 
=>.. 
e..  !
...! "
Identity.." *
)..* +
;..+ ,
etb00 
.00 
ApplyAuditTrail00 #
(00# $
)00$ %
;00% &
etb11 
.11 
ApplySoftDelete11 #
(11# $
)11$ %
;11% &
}22 
)22 
;22 
modelBuilder44 
.44 
Entity44 
<44  )
DailyOperationSizingReadModel44  =
>44= >
(44> ?
etb44? B
=>44C E
{55 
etb66 
.66 
ToTable66 
(66 
$str66 C
)66C D
;66D E
etb77 
.77 
HasKey77 
(77 
e77 
=>77 
e77  !
.77! "
Identity77" *
)77* +
;77+ ,
etb99 
.99 
HasMany99 
(99 
e99 
=>99  
e99! "
.99" #'
DailyOperationSizingDetails99# >
)99> ?
.:: 
WithOne:: 
(:: 
e:: 
=>:: !
e::" #
.::# $(
DailyOperationSizingDocument::$ @
)::@ A
.;; 
HasForeignKey;; "
(;;" #
e;;# $
=>;;% '
e;;( )
.;;) **
DailyOperationSizingDocumentId;;* H
);;H I
;;;I J
etb== 
.== 
ApplyAuditTrail== #
(==# $
)==$ %
;==% &
etb>> 
.>> 
ApplySoftDelete>> #
(>># $
)>>$ %
;>>% &
}?? 
)?? 
;?? 
modelBuilderAA 
.AA 
EntityAA 
<AA  
OperatorReadModelAA  1
>AA1 2
(AA2 3
etbAA3 6
=>AA7 9
{BB 
etbCC 
.CC 
ToTableCC 
(CC 
$strCC 7
)CC7 8
;CC8 9
etbDD 
.DD 
HasKeyDD 
(DD 
eDD 
=>DD 
eDD  !
.DD! "
IdentityDD" *
)DD* +
;DD+ ,
etbEE 
.EE 
PropertyEE 
(EE 
eEE 
=>EE !
eEE" #
.EE# $

AssignmentEE$ .
)EE. /
.EE/ 0
HasMaxLengthEE0 <
(EE< =
$numEE= @
)EE@ A
;EEA B
etbFF 
.FF 
PropertyFF 
(FF 
eFF 
=>FF !
eFF" #
.FF# $
TypeFF$ (
)FF( )
.FF) *
HasMaxLengthFF* 6
(FF6 7
$numFF7 :
)FF: ;
;FF; <
etbGG 
.GG 
PropertyGG 
(GG 
eGG 
=>GG !
eGG" #
.GG# $
GroupGG$ )
)GG) *
.GG* +
HasMaxLengthGG+ 7
(GG7 8
$numGG8 ;
)GG; <
;GG< =
etbII 
.II 
ApplyAuditTrailII #
(II# $
)II$ %
;II% &
etbJJ 
.JJ 
ApplySoftDeleteJJ #
(JJ# $
)JJ$ %
;JJ% &
}KK 
)KK 
;KK 
modelBuilderMM 
.MM 
EntityMM 
<MM  
ShiftReadModelMM  .
>MM. /
(MM/ 0
etbMM0 3
=>MM4 6
{NN 
etbOO 
.OO 
ToTableOO 
(OO 
$strOO 4
)OO4 5
;OO5 6
etbPP 
.PP 
HasKeyPP 
(PP 
ePP 
=>PP 
ePP  !
.PP! "
IdentityPP" *
)PP* +
;PP+ ,
etbQQ 
.QQ 
PropertyQQ 
(QQ 
eQQ 
=>QQ !
eQQ" #
.QQ# $
NameQQ$ (
)QQ( )
.QQ) *
HasMaxLengthQQ* 6
(QQ6 7
$numQQ7 :
)QQ: ;
;QQ; <
etbSS 
.SS 
ApplyAuditTrailSS #
(SS# $
)SS$ %
;SS% &
etbTT 
.TT 
ApplySoftDeleteTT #
(TT# $
)TT$ %
;TT% &
}UU 
)UU 
;UU 
modelBuilderWW 
.WW 
EntityWW #
<WW# $$
DailyOperationLoomDetailWW$ <
>WW< =
(WW= >
etbWW> A
=>WWB D
{XX 
etbYY 
.YY 
ToTableYY 
(YY 
$strYY ?
)YY? @
;YY@ A
etbZZ 
.ZZ 
HasKeyZZ 
(ZZ 
eZZ 
=>ZZ 
eZZ  !
.ZZ! "
IdentityZZ" *
)ZZ* +
;ZZ+ ,
etb\\ 
.\\ 
Property\\ 
(\\ 
e\\ 
=>\\ !
e\\" #
.\\# $%
DailyOperationLoomHistory\\$ =
)\\= >
.\\> ?
HasMaxLength\\? K
(\\K L
$num\\L Q
)\\Q R
;\\R S
etb^^ 
.^^ 
ApplyAuditTrail^^ #
(^^# $
)^^$ %
;^^% &
etb__ 
.__ 
ApplySoftDelete__ #
(__# $
)__$ %
;__% &
}`` 
)`` 
;`` 
modelBuilderbb 
.bb 
Entitybb 
<bb  '
DailyOperationLoomReadModelbb  ;
>bb; <
(bb< =
etbbb= @
=>bbA C
{cc 
etbdd 
.dd 
ToTabledd 
(dd 
$strdd A
)ddA B
;ddB C
etbee 
.ee 
HasKeyee 
(ee 
eee 
=>ee 
eee  !
.ee! "
Identityee" *
)ee* +
;ee+ ,
etbgg 
.gg 
HasManygg 
(gg 
egg 
=>gg  
egg! "
.gg" #%
DailyOperationLoomDetailsgg# <
)gg< =
.hh 
WithOnehh 
(hh 
ehh 
=>hh !
ehh" #
.hh# $&
DailyOperationLoomDocumenthh$ >
)hh> ?
.ii 
HasForeignKeyii "
(ii" #
eii# $
=>ii% '
eii( )
.ii) *(
DailyOperationLoomDocumentIdii* F
)iiF G
;iiG H
etbkk 
.kk 
ApplyAuditTrailkk #
(kk# $
)kk$ %
;kk% &
etbll 
.ll 
ApplySoftDeletell #
(ll# $
)ll$ %
;ll% &
}mm 
)mm 
;mm 
modelBuilderoo 
.oo 
Entityoo 
<oo  %
MachinesPlanningReadModeloo  9
>oo9 :
(oo: ;
etboo; >
=>oo? A
{pp 
etbqq 
.qq 
ToTableqq 
(qq 
$strqq ?
)qq? @
;qq@ A
etbrr 
.rr 
HasKeyrr 
(rr 
err 
=>rr 
err  !
.rr! "
Identityrr" *
)rr* +
;rr+ ,
etbtt 
.tt 
Propertytt 
(tt 
ett 
=>tt !
ett" #
.tt# $
Areatt$ (
)tt( )
.tt) *
HasMaxLengthtt* 6
(tt6 7
$numtt7 :
)tt: ;
;tt; <
etbuu 
.uu 
Propertyuu 
(uu 
euu 
=>uu !
euu" #
.uu# $
Blokuu$ (
)uu( )
.uu) *
HasMaxLengthuu* 6
(uu6 7
$numuu7 :
)uu: ;
;uu; <
etbvv 
.vv 
Propertyvv 
(vv 
evv 
=>vv !
evv" #
.vv# $

BlokKaizenvv$ .
)vv. /
.vv/ 0
HasMaxLengthvv0 <
(vv< =
$numvv= @
)vv@ A
;vvA B
etbxx 
.xx 
ApplyAuditTrailxx #
(xx# $
)xx$ %
;xx% &
etbyy 
.yy 
ApplySoftDeleteyy #
(yy# $
)yy$ %
;yy% &
}zz 
)zz 
;zz 
modelBuilder|| 
.|| 
Entity|| 
<||   
MachineTypeReadModel||  4
>||4 5
(||5 6
etb||6 9
=>||: <
{}} 
etb~~ 
.~~ 
ToTable~~ 
(~~ 
$str~~ :
)~~: ;
;~~; <
etb 
. 
HasKey 
( 
e 
=> 
e  !
.! "
Identity" *
)* +
;+ ,
etb
ÅÅ 
.
ÅÅ 
Property
ÅÅ 
(
ÅÅ 
e
ÅÅ 
=>
ÅÅ !
e
ÅÅ" #
.
ÅÅ# $
TypeName
ÅÅ$ ,
)
ÅÅ, -
.
ÅÅ- .
HasMaxLength
ÅÅ. :
(
ÅÅ: ;
$num
ÅÅ; >
)
ÅÅ> ?
;
ÅÅ? @
etb
ÇÇ 
.
ÇÇ 
Property
ÇÇ 
(
ÇÇ 
e
ÇÇ 
=>
ÇÇ !
e
ÇÇ" #
.
ÇÇ# $
MachineUnit
ÇÇ$ /
)
ÇÇ/ 0
.
ÇÇ0 1
HasMaxLength
ÇÇ1 =
(
ÇÇ= >
$num
ÇÇ> A
)
ÇÇA B
;
ÇÇB C
etb
ÑÑ 
.
ÑÑ 
ApplyAuditTrail
ÑÑ #
(
ÑÑ# $
)
ÑÑ$ %
;
ÑÑ% &
etb
ÖÖ 
.
ÖÖ 
ApplySoftDelete
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
modelBuilder
àà 
.
àà 
Entity
àà 
<
àà  &
MachineDocumentReadModel
àà  8
>
àà8 9
(
àà9 :
etb
àà: =
=>
àà> @
{
ââ 
etb
ää 
.
ää 
ToTable
ää 
(
ää 
$str
ää 6
)
ää6 7
;
ää7 8
etb
ãã 
.
ãã 
HasKey
ãã 
(
ãã 
e
ãã 
=>
ãã 
e
ãã  !
.
ãã! "
Identity
ãã" *
)
ãã* +
;
ãã+ ,
etb
çç 
.
çç 
Property
çç 
(
çç 
e
çç 
=>
çç !
e
çç" #
.
çç# $
MachineNumber
çç$ 1
)
çç1 2
.
çç2 3
HasMaxLength
çç3 ?
(
çç? @
$num
çç@ C
)
ççC D
;
ççD E
etb
éé 
.
éé 
Property
éé 
(
éé 
e
éé 
=>
éé !
e
éé" #
.
éé# $
Location
éé$ ,
)
éé, -
.
éé- .
HasMaxLength
éé. :
(
éé: ;
$num
éé; >
)
éé> ?
;
éé? @
etb
êê 
.
êê 
ApplyAuditTrail
êê #
(
êê# $
)
êê$ %
;
êê% &
etb
ëë 
.
ëë 
ApplySoftDelete
ëë #
(
ëë# $
)
ëë$ %
;
ëë% &
}
íí 
)
íí 
;
íí 
modelBuilder
îî 
.
îî 
Entity
îî 
<
îî  
EstimationProduct
îî  1
>
îî1 2
(
îî2 3
etb
îî3 6
=>
îî7 9
{
ïï 
etb
ññ 
.
ññ 
ToTable
ññ 
(
ññ 
$str
ññ 7
)
ññ7 8
;
ññ8 9
etb
óó 
.
óó 
HasKey
óó 
(
óó 
e
óó 
=>
óó 
e
óó  !
.
óó! "
Identity
óó" *
)
óó* +
;
óó+ ,
etb
ôô 
.
ôô 
Property
ôô 
(
ôô 
e
ôô 
=>
ôô !
e
ôô" #
.
ôô# $
OrderDocument
ôô$ 1
)
ôô1 2
.
ôô2 3
HasMaxLength
ôô3 ?
(
ôô? @
$num
ôô@ D
)
ôôD E
;
ôôE F
etb
öö 
.
öö 
Property
öö 
(
öö 
e
öö 
=>
öö !
e
öö" #
.
öö# $
ProductGrade
öö$ 0
)
öö0 1
.
öö1 2
HasMaxLength
öö2 >
(
öö> ?
$num
öö? C
)
ööC D
;
ööD E
etb
úú 
.
úú 
ApplyAuditTrail
úú #
(
úú# $
)
úú$ %
;
úú% &
etb
ùù 
.
ùù 
ApplySoftDelete
ùù #
(
ùù# $
)
ùù$ %
;
ùù% &
}
ûû 
)
ûû 
;
ûû 
modelBuilder
†† 
.
†† 
Entity
†† 
<
††  2
$EstimatedProductionDocumentReadModel
††  D
>
††D E
(
††E F
etb
††F I
=>
††J L
{
°° 
etb
¢¢ 
.
¢¢ 
ToTable
¢¢ 
(
¢¢ 
$str
¢¢ @
)
¢¢@ A
;
¢¢A B
etb
££ 
.
££ 
HasKey
££ 
(
££ 
e
££ 
=>
££ 
e
££  !
.
££! "
Identity
££" *
)
££* +
;
££+ ,
etb
•• 
.
•• 
Property
•• 
(
•• 
e
•• 
=>
•• !
e
••" #
.
••# $
Period
••$ *
)
••* +
.
••+ ,
HasMaxLength
••, 8
(
••8 9
$num
••9 <
)
••< =
;
••= >
etb
ßß 
.
ßß 
HasMany
ßß 
(
ßß 
e
ßß 
=>
ßß  
e
ßß! "
.
ßß" # 
EstimationProducts
ßß# 5
)
ßß5 6
.
®® 
WithOne
®® 
(
®® 
e
®® 
=>
®® !
e
®®" #
.
®®# $)
EstimatedProductionDocument
®®$ ?
)
®®? @
.
©© 
HasForeignKey
©© "
(
©©" #
e
©©# $
=>
©©% '
e
©©( )
.
©©) *+
EstimatedProductionDocumentId
©©* G
)
©©G H
;
©©H I
etb
´´ 
.
´´ 
ApplyAuditTrail
´´ #
(
´´# $
)
´´$ %
;
´´% &
etb
¨¨ 
.
¨¨ 
ApplySoftDelete
¨¨ #
(
¨¨# $
)
¨¨$ %
;
¨¨% &
}
≠≠ 
)
≠≠ 
;
≠≠ 
modelBuilder
ØØ 
.
ØØ 
Entity
ØØ 
<
ØØ  #
YarnDocumentReadModel
ØØ  5
>
ØØ5 6
(
ØØ6 7
etb
ØØ7 :
=>
ØØ; =
{
∞∞ 
etb
±± 
.
±± 
ToTable
±± 
(
±± 
$str
±± 3
)
±±3 4
;
±±4 5
etb
≤≤ 
.
≤≤ 
HasKey
≤≤ 
(
≤≤ 
e
≤≤ 
=>
≤≤ 
e
≤≤  !
.
≤≤! "
Identity
≤≤" *
)
≤≤* +
;
≤≤+ ,
etb
¥¥ 
.
¥¥ 
Property
¥¥ 
(
¥¥ 
p
¥¥ 
=>
¥¥ !
p
¥¥" #
.
¥¥# $
Code
¥¥$ (
)
¥¥( )
.
¥¥) *
HasMaxLength
¥¥* 6
(
¥¥6 7
$num
¥¥7 :
)
¥¥: ;
;
¥¥; <
etb
µµ 
.
µµ 
Property
µµ 
(
µµ 
p
µµ 
=>
µµ !
p
µµ" #
.
µµ# $
Name
µµ$ (
)
µµ( )
.
µµ) *
HasMaxLength
µµ* 6
(
µµ6 7
$num
µµ7 :
)
µµ: ;
;
µµ; <
etb
∂∂ 
.
∂∂ 
Property
∂∂ 
(
∂∂ 
p
∂∂ 
=>
∂∂ !
p
∂∂" #
.
∂∂# $
Tags
∂∂$ (
)
∂∂( )
.
∂∂) *
HasMaxLength
∂∂* 6
(
∂∂6 7
$num
∂∂7 :
)
∂∂: ;
;
∂∂; <
etb
∏∏ 
.
∏∏ 
ApplyAuditTrail
∏∏ #
(
∏∏# $
)
∏∏$ %
;
∏∏% &
etb
ππ 
.
ππ 
ApplySoftDelete
ππ #
(
ππ# $
)
ππ$ %
;
ππ% &
}
∫∫ 
)
∫∫ 
;
∫∫ 
modelBuilder
ºº 
.
ºº 
Entity
ºº 
<
ºº  .
 WeavingSupplierDocumentReadModel
ºº  @
>
ºº@ A
(
ººA B
etb
ººB E
=>
ººF H
{
ΩΩ 
etb
ææ 
.
ææ 
ToTable
ææ 
(
ææ 
$str
ææ 7
)
ææ7 8
;
ææ8 9
etb
øø 
.
øø 
HasKey
øø 
(
øø 
e
øø 
=>
øø 
e
øø  !
.
øø! "
Identity
øø" *
)
øø* +
;
øø+ ,
etb
¡¡ 
.
¡¡ 
Property
¡¡ 
(
¡¡ 
p
¡¡ 
=>
¡¡ !
p
¡¡" #
.
¡¡# $
Code
¡¡$ (
)
¡¡( )
.
¡¡) *
HasMaxLength
¡¡* 6
(
¡¡6 7
$num
¡¡7 :
)
¡¡: ;
;
¡¡; <
etb
¬¬ 
.
¬¬ 
Property
¬¬ 
(
¬¬ 
p
¬¬ 
=>
¬¬ !
p
¬¬" #
.
¬¬# $
Name
¬¬$ (
)
¬¬( )
.
¬¬) *
HasMaxLength
¬¬* 6
(
¬¬6 7
$num
¬¬7 :
)
¬¬: ;
;
¬¬; <
etb
ƒƒ 
.
ƒƒ 
ApplyAuditTrail
ƒƒ #
(
ƒƒ# $
)
ƒƒ$ %
;
ƒƒ% &
etb
≈≈ 
.
≈≈ 
ApplySoftDelete
≈≈ #
(
≈≈# $
)
≈≈$ %
;
≈≈% &
}
∆∆ 
)
∆∆ 
;
∆∆ 
modelBuilder
»» 
.
»» 
Entity
»» 
<
»»  )
YarnNumberDocumentReadModel
»»  ;
>
»»; <
(
»»< =
etb
»»= @
=>
»»A C
{
…… 
etb
   
.
   
ToTable
   
(
   
$str
   9
)
  9 :
;
  : ;
etb
ÀÀ 
.
ÀÀ 
HasKey
ÀÀ 
(
ÀÀ 
e
ÀÀ 
=>
ÀÀ 
e
ÀÀ  !
.
ÀÀ! "
Identity
ÀÀ" *
)
ÀÀ* +
;
ÀÀ+ ,
etb
ÕÕ 
.
ÕÕ 
Property
ÕÕ 
(
ÕÕ 
p
ÕÕ 
=>
ÕÕ !
p
ÕÕ" #
.
ÕÕ# $
Code
ÕÕ$ (
)
ÕÕ( )
.
ÕÕ) *
HasMaxLength
ÕÕ* 6
(
ÕÕ6 7
$num
ÕÕ7 :
)
ÕÕ: ;
;
ÕÕ; <
etb
ŒŒ 
.
ŒŒ 
Property
ŒŒ 
(
ŒŒ 
p
ŒŒ 
=>
ŒŒ !
p
ŒŒ" #
.
ŒŒ# $
Number
ŒŒ$ *
)
ŒŒ* +
.
ŒŒ+ ,
HasMaxLength
ŒŒ, 8
(
ŒŒ8 9
$num
ŒŒ9 <
)
ŒŒ< =
;
ŒŒ= >
etb
œœ 
.
œœ 
Property
œœ 
(
œœ 
p
œœ 
=>
œœ !
p
œœ" #
.
œœ# $
Description
œœ$ /
)
œœ/ 0
.
œœ0 1
HasMaxLength
œœ1 =
(
œœ= >
$num
œœ> A
)
œœA B
;
œœB C
etb
—— 
.
—— 
ApplyAuditTrail
—— #
(
——# $
)
——$ %
;
——% &
etb
““ 
.
““ 
ApplySoftDelete
““ #
(
““# $
)
““$ %
;
““% &
}
”” 
)
”” 
;
”” 
modelBuilder
’’ 
.
’’ 
Entity
’’ 
<
’’  )
FabricConstructionReadModel
’’  ;
>
’’; <
(
’’< =
etb
’’= @
=>
’’A C
{
÷÷ 
etb
◊◊ 
.
◊◊ 
ToTable
◊◊ 
(
◊◊ 
$str
◊◊ ;
)
◊◊; <
;
◊◊< =
etb
ÿÿ 
.
ÿÿ 
HasKey
ÿÿ 
(
ÿÿ 
e
ÿÿ 
=>
ÿÿ 
e
ÿÿ  !
.
ÿÿ! "
Identity
ÿÿ" *
)
ÿÿ* +
;
ÿÿ+ ,
etb
⁄⁄ 
.
⁄⁄ 
Property
⁄⁄ 
(
⁄⁄ 
p
⁄⁄ 
=>
⁄⁄ !
p
⁄⁄" #
.
⁄⁄# $ 
ConstructionNumber
⁄⁄$ 6
)
⁄⁄6 7
.
⁄⁄7 8
HasMaxLength
⁄⁄8 D
(
⁄⁄D E
$num
⁄⁄E H
)
⁄⁄H I
;
⁄⁄I J
etb
€€ 
.
€€ 
Property
€€ 
(
€€ 
p
€€ 
=>
€€ !
p
€€" #
.
€€# $
	WovenType
€€$ -
)
€€- .
.
€€. /
HasMaxLength
€€/ ;
(
€€; <
$num
€€< ?
)
€€? @
;
€€@ A
etb
‹‹ 
.
‹‹ 
Property
‹‹ 
(
‹‹ 
p
‹‹ 
=>
‹‹ !
p
‹‹" #
.
‹‹# $
WarpType
‹‹$ ,
)
‹‹, -
.
‹‹- .
HasMaxLength
‹‹. :
(
‹‹: ;
$num
‹‹; >
)
‹‹> ?
;
‹‹? @
etb
›› 
.
›› 
Property
›› 
(
›› 
p
›› 
=>
›› !
p
››" #
.
››# $
WeftType
››$ ,
)
››, -
.
››- .
HasMaxLength
››. :
(
››: ;
$num
››; >
)
››> ?
;
››? @
etb
ﬁﬁ 
.
ﬁﬁ 
Property
ﬁﬁ 
(
ﬁﬁ 
p
ﬁﬁ 
=>
ﬁﬁ !
p
ﬁﬁ" #
.
ﬁﬁ# $

ListOfWarp
ﬁﬁ$ .
)
ﬁﬁ. /
.
ﬁﬁ/ 0
HasMaxLength
ﬁﬁ0 <
(
ﬁﬁ< =
$num
ﬁﬁ= B
)
ﬁﬁB C
;
ﬁﬁC D
etb
ﬂﬂ 
.
ﬂﬂ 
Property
ﬂﬂ 
(
ﬂﬂ 
p
ﬂﬂ 
=>
ﬂﬂ !
p
ﬂﬂ" #
.
ﬂﬂ# $

ListOfWeft
ﬂﬂ$ .
)
ﬂﬂ. /
.
ﬂﬂ/ 0
HasMaxLength
ﬂﬂ0 <
(
ﬂﬂ< =
$num
ﬂﬂ= B
)
ﬂﬂB C
;
ﬂﬂC D
etb
·· 
.
·· 
ApplyAuditTrail
·· #
(
··# $
)
··$ %
;
··% &
etb
‚‚ 
.
‚‚ 
ApplySoftDelete
‚‚ #
(
‚‚# $
)
‚‚$ %
;
‚‚% &
}
„„ 
)
„„ 
;
„„ 
modelBuilder
ÂÂ 
.
ÂÂ 
Entity
ÂÂ 
<
ÂÂ  #
MaterialTypeReadModel
ÂÂ  5
>
ÂÂ5 6
(
ÂÂ6 7
etb
ÂÂ7 :
=>
ÂÂ; =
{
ÊÊ 
etb
ÁÁ 
.
ÁÁ 
ToTable
ÁÁ 
(
ÁÁ 
$str
ÁÁ :
)
ÁÁ: ;
;
ÁÁ; <
etb
ËË 
.
ËË 
HasKey
ËË 
(
ËË 
e
ËË 
=>
ËË 
e
ËË  !
.
ËË! "
Identity
ËË" *
)
ËË* +
;
ËË+ ,
etb
ÍÍ 
.
ÍÍ 
Property
ÍÍ 
(
ÍÍ 
p
ÍÍ 
=>
ÍÍ !
p
ÍÍ" #
.
ÍÍ# $
Code
ÍÍ$ (
)
ÍÍ( )
.
ÍÍ) *
HasMaxLength
ÍÍ* 6
(
ÍÍ6 7
$num
ÍÍ7 :
)
ÍÍ: ;
;
ÍÍ; <
etb
ÎÎ 
.
ÎÎ 
Property
ÎÎ 
(
ÎÎ 
p
ÎÎ 
=>
ÎÎ !
p
ÎÎ" #
.
ÎÎ# $
Name
ÎÎ$ (
)
ÎÎ( )
.
ÎÎ) *
HasMaxLength
ÎÎ* 6
(
ÎÎ6 7
$num
ÎÎ7 :
)
ÎÎ: ;
;
ÎÎ; <
etb
ÏÏ 
.
ÏÏ 
Property
ÏÏ 
(
ÏÏ 
p
ÏÏ 
=>
ÏÏ !
p
ÏÏ" #
.
ÏÏ# $
Description
ÏÏ$ /
)
ÏÏ/ 0
.
ÏÏ0 1
HasMaxLength
ÏÏ1 =
(
ÏÏ= >
$num
ÏÏ> A
)
ÏÏA B
;
ÏÏB C
etb
ÓÓ 
.
ÓÓ 
ApplyAuditTrail
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
;
ÓÓ% &
etb
ÔÔ 
.
ÔÔ 
ApplySoftDelete
ÔÔ #
(
ÔÔ# $
)
ÔÔ$ %
;
ÔÔ% &
}
 
)
 
;
 
modelBuilder
ÚÚ 
.
ÚÚ 
Entity
ÚÚ 
<
ÚÚ  $
OrderDocumentReadModel
ÚÚ  6
>
ÚÚ6 7
(
ÚÚ7 8
etb
ÚÚ8 ;
=>
ÚÚ< >
{
ÛÛ 
etb
ÙÙ 
.
ÙÙ 
ToTable
ÙÙ 
(
ÙÙ 
$str
ÙÙ 4
)
ÙÙ4 5
;
ÙÙ5 6
etb
ıı 
.
ıı 
HasKey
ıı 
(
ıı 
e
ıı 
=>
ıı 
e
ıı  !
.
ıı! "
Identity
ıı" *
)
ıı* +
;
ıı+ ,
etb
˜˜ 
.
˜˜ 
Property
˜˜ 
(
˜˜ 
p
˜˜ 
=>
˜˜ !
p
˜˜" #
.
˜˜# $
ConstructionId
˜˜$ 2
)
˜˜2 3
.
˜˜3 4
HasMaxLength
˜˜4 @
(
˜˜@ A
$num
˜˜A D
)
˜˜D E
;
˜˜E F
etb
¯¯ 
.
¯¯ 
Property
¯¯ 
(
¯¯ 
p
¯¯ 
=>
¯¯ !
p
¯¯" #
.
¯¯# $
Period
¯¯$ *
)
¯¯* +
.
¯¯+ ,
HasMaxLength
¯¯, 8
(
¯¯8 9
$num
¯¯9 <
)
¯¯< =
;
¯¯= >
etb
˘˘ 
.
˘˘ 
Property
˘˘ 
(
˘˘ 
p
˘˘ 
=>
˘˘ !
p
˘˘" #
.
˘˘# $
WarpComposition
˘˘$ 3
)
˘˘3 4
.
˘˘4 5
HasMaxLength
˘˘5 A
(
˘˘A B
$num
˘˘B E
)
˘˘E F
;
˘˘F G
etb
˙˙ 
.
˙˙ 
Property
˙˙ 
(
˙˙ 
p
˙˙ 
=>
˙˙ !
p
˙˙" #
.
˙˙# $
WeftComposition
˙˙$ 3
)
˙˙3 4
.
˙˙4 5
HasMaxLength
˙˙5 A
(
˙˙A B
$num
˙˙B E
)
˙˙E F
;
˙˙F G
etb
˚˚ 
.
˚˚ 
Property
˚˚ 
(
˚˚ 
p
˚˚ 
=>
˚˚ !
p
˚˚" #
.
˚˚# $
OrderStatus
˚˚$ /
)
˚˚/ 0
.
˚˚0 1
HasMaxLength
˚˚1 =
(
˚˚= >
$num
˚˚> A
)
˚˚A B
;
˚˚B C
etb
˝˝ 
.
˝˝ 
ApplyAuditTrail
˝˝ #
(
˝˝# $
)
˝˝$ %
;
˝˝% &
etb
˛˛ 
.
˛˛ 
ApplySoftDelete
˛˛ #
(
˛˛# $
)
˛˛$ %
;
˛˛% &
}
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
}
ÅÅ 
}ÇÇ §
¨D:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Estimations\Productions\Repositories\EstimationProductionRepository.cs
	namespace

 	
Manufactures


 
.

 
Data

 
.

 
EntityFrameworkCore

 /
.

/ 0
Estimations

0 ;
.

; <
Productions

< G
.

G H
Repositories

H T
{ 
public 

class *
EstimationProductionRepository /
:0 1
AggregateRepostory2 D
<D E'
EstimatedProductionDocumentE `
,` a1
$EstimatedProductionDocumentReadModel	b Ü
>
Ü á
,
á à*
IEstimationProductRepository
â •
{ 
	protected 
override '
EstimatedProductionDocument 6
Map7 :
(: ;0
$EstimatedProductionDocumentReadModel; _
	readModel` i
)i j
{ 	
return 
new '
EstimatedProductionDocument 2
(2 3
	readModel3 <
)< =
;= >
} 	
public 
async 
Task 
< 
string  
>  !
GetEstimationNumber" 5
(5 6
)6 7
{ 	
DateTimeOffset 
now 
=  
DateTimeOffset! /
./ 0
Now0 3
;3 4
var 
year 
= 
now 
. 
Year 
.  
ToString  (
(( )
)) *
;* +
var 
month 
= 
now 
. 
Month !
.! "
ToString" *
(* +
)+ ,
;, -
var 
estimationNumber  
=! "
(# $
this$ (
.( )
dbSet) .
.. /
Where/ 4
(4 5
o5 6
=>7 9
o: ;
.; <
Period< B
.B C
DeserializeC N
<N O
PeriodO U
>U V
(V W
)W X
.X Y
YearY ]
.] ^
Contains^ f
(f g
yearg k
)k l
)l m
)m n
.n o
Counto t
(t u
)u v
+w x
$numy z
.z {
ToString	{ É
(
É Ñ
)
Ñ Ö
;
Ö Ü
estimationNumber 
= 
estimationNumber /
./ 0
PadLeft0 7
(7 8
$num8 9
,9 :
$char; >
)> ?
+@ A
$strB E
+F G
monthH M
.M N
PadLeftN U
(U V
$numV W
,W X
$charY \
)\ ]
+^ _
$str` c
+d e
yearf j
;j k
return 
await 
Task 
. 

FromResult (
(( )
estimationNumber) 9
)9 :
;: ;
} 	
} 
} Í
®D:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\FabricConstructions\Repositories\ConstructionDocumentRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
FabricConstructions0 C
.C D
RepositoriesD P
{ 
public 

class *
ConstructionDocumentRepository /
:0 1
AggregateRepostory2 D
<D E&
FabricConstructionDocumentE _
,_ `'
FabricConstructionReadModela |
>| }
,} ~*
IFabricConstructionRepository	 ú
{		 
	protected

 
override

 &
FabricConstructionDocument

 5
Map

6 9
(

9 :'
FabricConstructionReadModel

: U
	readModel

V _
)

_ `
{ 	
return 
new &
FabricConstructionDocument 1
(1 2
	readModel2 ;
); <
;< =
} 	
} 
} Å
íD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Goods\Repositories\ProductGoodsRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
Goods0 5
.5 6
Repositories6 B
{ 
public 

class "
ProductGoodsRepository '
:( )
AggregateRepostory* <
<< =
ProductGoods= I
,I J!
ProductGoodsReadModelK `
>` a
,a b#
IProductGoodsRepositoryc z
{		 
	protected

 
override

 
ProductGoods

 '
Map

( +
(

+ ,!
ProductGoodsReadModel

, A
	readModel

B K
)

K L
{ 	
return 
new 
ProductGoods #
(# $
	readModel$ -
)- .
;. /
} 	
} 
} Ã
üD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\MachinesPlanning\Repositories\EnginePlanningRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
MachinesPlanning0 @
.@ A
RepositoriesA M
{ 
public 

class $
EnginePlanningRepository )
:* +
AggregateRepostory, >
<> ?$
MachinesPlanningDocument? W
,W X%
MachinesPlanningReadModelY r
>r s
,s t(
IMachinesPlanningRepository	u ê
{		 
	protected

 
override

 $
MachinesPlanningDocument

 3
Map

4 7
(

7 8%
MachinesPlanningReadModel

8 Q
	readModel

R [
)

[ \
{ 	
return 
new $
MachinesPlanningDocument /
(/ 0
	readModel0 9
)9 :
;: ;
} 	
} 
} á
êD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Machines\Repositories\MachineRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
Machines0 8
.8 9
Repositories9 E
{ 
public 

class 
MachineRepository "
:# $
AggregateRepostory% 7
<7 8
MachineDocument8 G
,G H$
MachineDocumentReadModelI a
>a b
,b c
IMachineRepositoryd v
{		 
	protected

 
override

 
MachineDocument

 *
Map

+ .
(

. /$
MachineDocumentReadModel

/ G
	readModel

H Q
)

Q R
{ 	
return 
new 
MachineDocument &
(& '
	readModel' 0
)0 1
;1 2
} 	
} 
} ü
òD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\MachineTypes\Repositories\MachineTypeRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
MachineTypes0 <
.< =
Repositories= I
{ 
public 

class !
MachineTypeRepository &
:' (
AggregateRepostory) ;
<; <
MachineTypeDocument< O
,O P 
MachineTypeReadModelQ e
>e f
,f g"
IMachineTypeRepositoryh ~
{		 
	protected

 
override

 
MachineTypeDocument

 .
Map

/ 2
(

2 3 
MachineTypeReadModel

3 G
	readModel

H Q
)

Q R
{ 	
return 
new 
MachineTypeDocument *
(* +
	readModel+ 4
)4 5
;5 6
} 	
} 
} ¢
ñD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Materials\Repositories\MaterialTypeRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
	Materials0 9
.9 :
Repositories: F
{ 
public 

class "
MaterialTypeRepository '
:( )
AggregateRepostory* <
<< = 
MaterialTypeDocument= Q
,Q R!
MaterialTypeReadModelS h
>h i
,i j$
IMaterialTypeRepository	k Ç
{		 
	protected

 
override

  
MaterialTypeDocument

 /
Map

0 3
(

3 4!
MaterialTypeReadModel

4 I
	readModel

J S
)

S T
{ 	
return 
new  
MaterialTypeDocument +
(+ ,
	readModel, 5
)5 6
;6 7
} 	
} 
} Å
íD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Operators\Repositories\OperatorRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
	Operators0 9
.9 :
Repositories: F
{ 
public 

class 
OperatorRepository #
:$ %
AggregateRepostory& 8
<8 9
OperatorDocument9 I
,I J
OperatorReadModelK \
>\ ]
,] ^
IOperatorRepository_ r
{		 
	protected

 
override

 
OperatorDocument

 +
Map

, /
(

/ 0
OperatorReadModel

0 A
	readModel

B K
)

K L
{ 	
return 
new 
OperatorDocument '
(' (
	readModel( 1
)1 2
;2 3
} 	
} 
} ˆ
óD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Orders\Repositories\ManufactureOrderRepository.cs
	namespace 	
Manufactures
 
. 
Domain 
. 
Orders $
.$ %
Repositories% 1
{ 
public 

class &
ManufactureOrderRepository +
:, -
AggregateRepostory. @
<@ A
ManufactureOrderA Q
,Q R%
ManufactureOrderReadModelS l
>l m
,m n(
IManufactureOrderRepository	o ä
{ 
	protected 
override 
ManufactureOrder +
Map, /
(/ 0%
ManufactureOrderReadModel0 I
	readModelJ S
)S T
{		 	
return

 
new

 
ManufactureOrder

 '
(

' (
	readModel

( 1
)

1 2
;

2 3
} 	
} 
} Ö
îD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Orders\Repositories\OrderDocumentRepository.cs
	namespace

 	
Manufactures


 
.

 
Data

 
.

 
EntityFrameworkCore

 /
.

/ 0
Orders

0 6
.

6 7
Repositories

7 C
{ 
public 

class #
OrderDocumentRepository (
:) *
AggregateRepostory+ =
<= >
OrderDocument> K
,K L"
OrderDocumentReadModelM c
>c d
,d e,
IWeavingOrderDocumentRepository	f Ö
{ 
	protected 
override 
OrderDocument (
Map) ,
(, -"
OrderDocumentReadModel- C
	readModelD M
)M N
{ 	
return 
new 
OrderDocument $
($ %
	readModel% .
). /
;/ 0
} 	
public 
async 
Task 
< 
string  
>  !!
GetWeavingOrderNumber" 7
(7 8
)8 9
{ 	
DateTimeOffset 
now 
=  
DateTimeOffset! /
./ 0
Now0 3
;3 4
var 
year 
= 
now 
. 
Year 
.  
ToString  (
(( )
)) *
;* +
var 
month 
= 
now 
. 
Month !
.! "
ToString" *
(* +
)+ ,
;, -
var 
orderNumber 
= 
( 
this #
.# $
dbSet$ )
.) *
Where* /
(/ 0
order0 5
=>6 8
order9 >
.> ?
Period? E
.E F
DeserializeF Q
<Q R
PeriodR X
>X Y
(Y Z
)Z [
.[ \
Year\ `
.` a
Containsa i
(i j
yearj n
)n o
)o p
.p q
Countq v
(v w
)w x
+y z
$num{ |
)| }
.} ~
ToString	~ Ü
(
Ü á
)
á à
;
à â
orderNumber 
= 
orderNumber %
.% &
PadLeft& -
(- .
$num. /
,/ 0
$char1 4
)4 5
+6 7
$str8 ;
+< =
month> C
.C D
PadLeftD K
(K L
$numL M
,M N
$charO R
)R S
+T U
$strV Y
+Z [
year\ `
;` a
return 
await 
Task 
. 

FromResult (
(( )
orderNumber) 4
)4 5
;5 6
} 	
} 
} „
åD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Shifts\Repositories\ShiftRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
Shifts0 6
.6 7
Repositories7 C
{ 
public		 

class		 
ShiftRepository		  
:		! "
AggregateRepostory		# 5
<		5 6
ShiftDocument		6 C
,		C D
ShiftReadModel		E S
>		S T
,		T U
IShiftRepository		V f
{

 
	protected 
override 
ShiftDocument (
Map) ,
(, -
ShiftReadModel- ;
	readModel< E
)E F
{ 	
return 
new 
ShiftDocument $
($ %
	readModel% .
). /
;/ 0
} 	
} 
} º
íD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Suppliers\Repositories\SupplierRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
	Suppliers0 9
.9 :
Repositories: F
{ 
public 

class 
SupplierRepository #
:$ %
AggregateRepostory& 8
<8 9#
WeavingSupplierDocument9 P
,P Q,
 WeavingSupplierDocumentReadModelR r
>r s
,s t'
IWeavingSupplierRepository	u è
{		 
	protected

 
override

 #
WeavingSupplierDocument

 2
Map

3 6
(

6 7,
 WeavingSupplierDocumentReadModel

7 W
	readModel

X a
)

a b
{ 	
return 
new #
WeavingSupplierDocument .
(. /
	readModel/ 8
)8 9
;9 :
} 	
} 
} ™
òD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\YarnNumbers\Repositories\RingDocumentRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
YarnNumbers0 ;
.; <
Repositories< H
{		 
public

 

class

 "
RingDocumentRepository

 '
:

( )
AggregateRepostory

* <
<

< =
YarnNumberDocument

= O
,

O P'
YarnNumberDocumentReadModel

Q l
>

l m
,

m n"
IYarnNumberRepository	

o Ñ
{ 
	protected 
override 
YarnNumberDocument -
Map. 1
(1 2'
YarnNumberDocumentReadModel2 M
	readModelN W
)W X
{ 	
return 
new 
YarnNumberDocument )
() *
	readModel* 3
)3 4
;4 5
} 	
} 
} Ò
äD:\DanLirisDevelopment\id.co.danliris-weaving-web\src\Manufactures.Data.EntityFrameworkCore.SqlServer\Yarns\Repositories\YarnRepository.cs
	namespace 	
Manufactures
 
. 
Data 
. 
EntityFrameworkCore /
./ 0
Yarns0 5
.5 6
Repositories6 B
{ 
public 

class 
YarnRepository 
:  !
AggregateRepostory" 4
<4 5
YarnDocument5 A
,A B!
YarnDocumentReadModelC X
>X Y
,Y Z#
IYarnDocumentRepository[ r
{		 
	protected

 
override

 
YarnDocument

 '
Map

( +
(

+ ,!
YarnDocumentReadModel

, A
	readModel

B K
)

K L
{ 	
return 
new 
YarnDocument #
(# $
	readModel$ -
)- .
;. /
} 	
} 
} 