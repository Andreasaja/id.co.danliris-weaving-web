// <auto-generated />
using System;
using DanLiris.Admin.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DanLiris.Admin.Web.Migrations
{
    [DbContext(typeof(AppStorageContext))]
    [Migration("20190426112624_Weaving_DailyOperationSizing")]
    partial class Weaving_DailyOperationSizing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Manufactures.Domain.Construction.ReadModels.ConstructionDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountOfWarp");

                    b.Property<int>("AmountOfWeft");

                    b.Property<string>("ConstructionNumber")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ListOfWarp")
                        .HasMaxLength(20000);

                    b.Property<string>("ListOfWeft")
                        .HasMaxLength(20000);

                    b.Property<string>("MaterialTypeName");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("TotalYarn");

                    b.Property<string>("WarpType")
                        .HasMaxLength(255);

                    b.Property<string>("WeftType")
                        .HasMaxLength(255);

                    b.Property<int>("Width");

                    b.Property<string>("WovenType")
                        .HasMaxLength(255);

                    b.HasKey("Identity");

                    b.ToTable("Weaving_ConstructionDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.Entities.DailyOperationLoomDetail", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BeamDocumentId");

                    b.Property<Guid?>("BeamOperatorDocumentId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("DOMTime");

                    b.Property<Guid>("DailyOperationLoomDocumentId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("DetailStatus")
                        .HasMaxLength(255);

                    b.Property<string>("Information")
                        .HasMaxLength(2000);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid?>("OrderDocumentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid?>("ShiftDocumentId");

                    b.Property<Guid?>("SizingOperatorDocumentId");

                    b.Property<string>("WarpsOrigin");

                    b.Property<string>("WeftsOrigin");

                    b.HasKey("Identity");

                    b.HasIndex("DailyOperationLoomDocumentId");

                    b.ToTable("Weaving_DailyOperationLoomDetails");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.ReadModels.DailyOperationLoomReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DateOperated");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid?>("MachineId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Status");

                    b.Property<int?>("UnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationLoomDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.Entities.DailyOperationSizingDetail", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BeamDocumentId");

                    b.Property<string>("BeamTime");

                    b.Property<int>("BrokenBeam");

                    b.Property<Guid?>("ConstructionDocumentId");

                    b.Property<double>("Counter");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationSizingDocumentId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Information")
                        .HasMaxLength(2000);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<int>("PIS");

                    b.Property<string>("ProductionTime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid?>("ShiftDocumentId");

                    b.Property<int>("TroubledMachine");

                    b.Property<string>("Visco")
                        .HasMaxLength(255);

                    b.HasKey("Identity");

                    b.HasIndex("DailyOperationSizingDocumentId");

                    b.ToTable("Weaving_DailyOperationSizingDetails");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.ReadModels.DailyOperationSizingReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid?>("MachineDocumentId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<DateTimeOffset>("ProductionDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("WeavingUnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationSizingDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Estimations.Productions.Entities.EstimationProduct", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid>("EstimatedProductionDocumentId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("OrderDocument")
                        .HasMaxLength(2000);

                    b.Property<string>("ProductGrade")
                        .HasMaxLength(2000);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("TotalGramEstimation");

                    b.HasKey("Identity");

                    b.HasIndex("EstimatedProductionDocumentId");

                    b.ToTable("Weaving_EstimationDetails");
                });

            modelBuilder.Entity("Manufactures.Domain.Estimations.Productions.ReadModels.EstimatedProductionDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("EstimatedNumber");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Period")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_EstimationProductDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Machines.ReadModels.MachineDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255);

                    b.Property<string>("MachineNumber")
                        .HasMaxLength(255);

                    b.Property<Guid?>("MachineTypeId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("WeavingUnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MachineDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.MachineTypes.ReadModels.MachineTypeReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("MachineUnit")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("Speed");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255);

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MachineTypeDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Materials.ReadModels.MaterialTypeReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("RingDocuments");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MaterialTypeDocument");
                });

            modelBuilder.Entity("Manufactures.Domain.OperationalMachinesPlanning.ReadModels.MachinesPlanningReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area")
                        .HasMaxLength(255);

                    b.Property<string>("Blok")
                        .HasMaxLength(255);

                    b.Property<string>("BlokKaizen")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid?>("MachineId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UnitDepartementId");

                    b.Property<string>("UserMaintenanceId");

                    b.Property<string>("UserOperatorId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MachinesPlanningDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Operators.ReadModels.OperatorReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Assignment")
                        .HasMaxLength(255);

                    b.Property<string>("CoreAccount");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Group")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<int?>("UnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_OperatorDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Orders.ReadModels.WeavingOrderDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ConstructionId")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DateOrdered");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(255);

                    b.Property<string>("Period")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UnitId");

                    b.Property<string>("WarpComposition")
                        .HasMaxLength(255);

                    b.Property<string>("WarpOrigin");

                    b.Property<string>("WeftComposition")
                        .HasMaxLength(255);

                    b.Property<string>("WeftOrigin");

                    b.Property<int>("WholeGrade");

                    b.Property<string>("YarnType");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_OrderDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Shifts.ReadModels.ShiftReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("EndTime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("StartTime");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_ShiftDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Suppliers.ReadModels.WeavingSupplierDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CoreSupplierId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_SupplierDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.YarnNumbers.ReadModels.YarnNumberDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<int>("Number")
                        .HasMaxLength(255);

                    b.Property<string>("RingType");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_YarnNumberDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Yarns.ReadModels.YarnDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid?>("MaterialTypeId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Tags")
                        .HasMaxLength(255);

                    b.Property<Guid?>("YarnNumberId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_YarnDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.Entities.DailyOperationLoomDetail", b =>
                {
                    b.HasOne("Manufactures.Domain.DailyOperations.Loom.ReadModels.DailyOperationLoomReadModel", "DailyOperationLoomDocument")
                        .WithMany("DailyOperationLoomDetails")
                        .HasForeignKey("DailyOperationLoomDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.Entities.DailyOperationSizingDetail", b =>
                {
                    b.HasOne("Manufactures.Domain.DailyOperations.Sizing.ReadModels.DailyOperationSizingReadModel", "DailyOperationSizingDocument")
                        .WithMany("DailyOperationSizingDetails")
                        .HasForeignKey("DailyOperationSizingDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manufactures.Domain.Estimations.Productions.Entities.EstimationProduct", b =>
                {
                    b.HasOne("Manufactures.Domain.Estimations.Productions.ReadModels.EstimatedProductionDocumentReadModel", "EstimatedProductionDocument")
                        .WithMany("EstimationProducts")
                        .HasForeignKey("EstimatedProductionDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
