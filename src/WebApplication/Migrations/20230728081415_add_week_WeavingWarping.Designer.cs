// <auto-generated />
using System;
using DanLiris.Admin.Web;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DanLiris.Admin.Web.Migrations
{
    [DbContext(typeof(AppStorageContext))]
    [Migration("20230728081415_add_week_WeavingWarping")]
    partial class add_week_WeavingWarping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Manufactures.Domain.Beams.ReadModels.BeamReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ContructionId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<double>("EmptyWeight");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Number")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<double?>("YarnLength");

                    b.Property<double?>("YarnStrands");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_BeamDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.BeamStockMonitoring.ReadModels.BeamStockMonitoringReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BeamDocumentId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<DateTimeOffset>("EmptyEntryDate");

                    b.Property<int>("LengthUOMId");

                    b.Property<DateTimeOffset>("LoomEntryDate");

                    b.Property<bool>("LoomFinish");

                    b.Property<double>("LoomLengthStock");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid>("OrderDocumentId");

                    b.Property<int>("Position");

                    b.Property<DateTimeOffset>("ReachingEntryDate");

                    b.Property<double>("ReachingLengthStock");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("SizingEntryDate");

                    b.Property<double>("SizingLengthStock");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_BeamStockMonitoringDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.BeamStockUpload.ReadModels.BeamStockReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Beam");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("InReaching");

                    b.Property<string>("Information");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("MonthPeriode");

                    b.Property<int>("MonthPeriodeId");

                    b.Property<string>("Reaching");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Shift");

                    b.Property<string>("Sizing");

                    b.Property<string>("YearPeriode");

                    b.HasKey("Identity");

                    b.ToTable("WeavingBeamStocks");
                });

            modelBuilder.Entity("Manufactures.Domain.BrokenCauses.Warping.ReadModels.WarpingBrokenCauseReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Information")
                        .HasMaxLength(255);

                    b.Property<bool>("IsOthers");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("WarpingBrokenCauseName")
                        .HasMaxLength(255);

                    b.HasKey("Identity");

                    b.ToTable("Weaving_WarpingBrokenCauseDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.ReadModels.DailyOperationLoomBeamUsedReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BeamDocumentId");

                    b.Property<string>("BeamNumber");

                    b.Property<string>("BeamOrigin");

                    b.Property<string>("BeamUsedStatus");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationLoomDocumentId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<double>("Efficiency");

                    b.Property<double>("F");

                    b.Property<double>("FinishCounter");

                    b.Property<bool>("IsCompletedProduction");

                    b.Property<double>("L");

                    b.Property<DateTimeOffset>("LastDateTimeProcessed");

                    b.Property<Guid>("LastTyingOperatorDocumentId");

                    b.Property<string>("LastTyingOperatorName");

                    b.Property<string>("LoomMachineNumber");

                    b.Property<double>("MachineSpeed");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("SCMPX");

                    b.Property<double>("StartCounter");

                    b.Property<double>("T");

                    b.Property<Guid>("TyingMachineDocumentId");

                    b.Property<string>("TyingMachineNumber");

                    b.Property<int>("UomDocumentId");

                    b.Property<string>("UomUnit");

                    b.Property<double>("W");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationLoomBeamsUsed");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.ReadModels.DailyOperationLoomDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BeamProcessed");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("OperationStatus");

                    b.Property<Guid>("OrderDocumentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("TotalCounter");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationLoomDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.ReadModels.DailyOperationLoomHistoryReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BeamDocumentId");

                    b.Property<string>("BeamNumber");

                    b.Property<double>("CounterPerOperator");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationLoomDocumentId");

                    b.Property<DateTimeOffset>("DateTimeMachine");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Information");

                    b.Property<Guid>("LoomMachineId");

                    b.Property<Guid>("LoomOperatorId");

                    b.Property<string>("MachineStatus");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid>("ShiftDocumentId");

                    b.Property<Guid>("TyingMachineId");

                    b.Property<Guid>("TyingOperatorId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationLoomHistories");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Loom.ReadModels.DailyOperationLoomMachineReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AL");

                    b.Property<string>("AP");

                    b.Property<string>("AP2");

                    b.Property<string>("AP3");

                    b.Property<string>("Block");

                    b.Property<string>("BlockName");

                    b.Property<string>("Column1");

                    b.Property<string>("Construction");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("EFFMC");

                    b.Property<string>("F");

                    b.Property<string>("L");

                    b.Property<string>("Length");

                    b.Property<string>("Location");

                    b.Property<string>("MC2Eff");

                    b.Property<string>("MCNo");

                    b.Property<string>("MCNo2");

                    b.Property<string>("MCRPM");

                    b.Property<string>("MTC");

                    b.Property<string>("MTCLock");

                    b.Property<string>("MTCName");

                    b.Property<string>("MachineNameType");

                    b.Property<string>("MachineType");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("MonthId");

                    b.Property<string>("MonthPeriode");

                    b.Property<int>("MonthPeriodeId");

                    b.Property<string>("Operator");

                    b.Property<string>("PercentEff");

                    b.Property<string>("Production");

                    b.Property<string>("Production100");

                    b.Property<string>("ProductionCMPX");

                    b.Property<string>("RPM");

                    b.Property<string>("RPMProduction100");

                    b.Property<string>("Row");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("SPNo");

                    b.Property<string>("SPYear");

                    b.Property<string>("Shift");

                    b.Property<string>("T");

                    b.Property<string>("TA");

                    b.Property<string>("Thread");

                    b.Property<string>("ThreadType");

                    b.Property<string>("W");

                    b.Property<string>("Warp");

                    b.Property<string>("WarpType");

                    b.Property<string>("Weft");

                    b.Property<string>("WeftType");

                    b.Property<string>("WeftType2");

                    b.Property<string>("WeftType3");

                    b.Property<string>("Year");

                    b.Property<string>("YearPeriode");

                    b.HasKey("Identity");

                    b.ToTable("WeavingDailyOperationLoomMachines");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Productions.ReadModels.WeavingDailyOperationMachineSizingReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("A12");

                    b.Property<string>("A34");

                    b.Property<string>("AL");

                    b.Property<string>("AddedLength");

                    b.Property<string>("B12");

                    b.Property<string>("B34");

                    b.Property<string>("BeamNo");

                    b.Property<string>("BeamWidth");

                    b.Property<string>("Bruto");

                    b.Property<string>("C1234");

                    b.Property<string>("Capacity");

                    b.Property<string>("Code");

                    b.Property<string>("Construction");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Draft");

                    b.Property<string>("Efficiency");

                    b.Property<string>("EmptyBeamWeight");

                    b.Property<string>("F1");

                    b.Property<string>("F2");

                    b.Property<string>("FDS");

                    b.Property<string>("FP");

                    b.Property<string>("FW");

                    b.Property<string>("FinalCounter");

                    b.Property<string>("Group");

                    b.Property<string>("Information");

                    b.Property<string>("Length");

                    b.Property<string>("Lot");

                    b.Property<string>("MachineSizing");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Ne");

                    b.Property<string>("Netto");

                    b.Property<string>("Periode");

                    b.Property<int>("PeriodeId");

                    b.Property<string>("Pis");

                    b.Property<string>("Recipe");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("SP");

                    b.Property<string>("SPU");

                    b.Property<string>("SPYear");

                    b.Property<string>("Shift");

                    b.Property<string>("Speed");

                    b.Property<string>("SpeedMin");

                    b.Property<string>("TekSQ");

                    b.Property<string>("TempSD1");

                    b.Property<string>("TempSD2");

                    b.Property<string>("Teoritis");

                    b.Property<string>("ThreadCount");

                    b.Property<string>("ThreadOrigin");

                    b.Property<string>("VisCoseSD1");

                    b.Property<string>("VisCoseSD2");

                    b.Property<string>("WarpType");

                    b.Property<string>("WarpingLenght");

                    b.Property<string>("Water");

                    b.Property<string>("Week");

                    b.Property<string>("Year");

                    b.Property<string>("YearProduction");

                    b.HasKey("Identity");

                    b.ToTable("WeavingDailyOperationMachineSizing");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Reaching.ReadModels.DailyOperationMachineReachingReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BeamNo")
                        .HasMaxLength(100);

                    b.Property<string>("BeamWidth");

                    b.Property<string>("CM");

                    b.Property<string>("Checker");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CombEfficiency");

                    b.Property<string>("CombNo");

                    b.Property<string>("CombStrands");

                    b.Property<string>("CombWidth");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Doffing");

                    b.Property<string>("DoffingEfficiency");

                    b.Property<string>("Eff2");

                    b.Property<string>("Group")
                        .HasMaxLength(100);

                    b.Property<string>("Information");

                    b.Property<string>("InstallEfficiency");

                    b.Property<string>("MCNo");

                    b.Property<string>("Margin");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Month");

                    b.Property<int>("MonthId");

                    b.Property<string>("Operator");

                    b.Property<string>("ReachingEfficiency");

                    b.Property<string>("ReachingInstall");

                    b.Property<string>("ReachingStrands");

                    b.Property<string>("ReedSpace");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Shift");

                    b.Property<string>("TotalWarp");

                    b.Property<string>("Webbing");

                    b.Property<string>("Year");

                    b.Property<string>("YearPeriode");

                    b.HasKey("Identity");

                    b.ToTable("WeavingDailyOperationReachingMachines");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Reaching.ReadModels.DailyOperationReachingHistoryReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationReachingDocumentId");

                    b.Property<DateTimeOffset>("DateTimeMachine");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("MachineStatus");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid>("OperatorDocumentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid>("ShiftDocumentId");

                    b.Property<int>("YarnStrandsProcessed");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationReachingHistories");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Reaching.ReadModels.DailyOperationReachingReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CombEdgeStitching");

                    b.Property<int>("CombNumber");

                    b.Property<double>("CombWidth");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid?>("MachineDocumentId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("OperationStatus");

                    b.Property<Guid?>("OrderDocumentId");

                    b.Property<string>("ReachingInTypeInput");

                    b.Property<string>("ReachingInTypeOutput");

                    b.Property<double>("ReachingInWidth");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid?>("SizingBeamId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationReachingDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.ReadModels.DailyOperationSizingBeamProductReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BeamStatus");

                    b.Property<double>("CounterFinish");

                    b.Property<double>("CounterStart");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationSizingDocumentId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<DateTimeOffset>("LatestDateTimeBeamProduct");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<double>("PISMeter");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("SPU");

                    b.Property<Guid>("SizingBeamId");

                    b.Property<int>("TotalBroken");

                    b.Property<double>("WeightBruto");

                    b.Property<double>("WeightNetto");

                    b.Property<double>("WeightTheoritical");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationSizingBeamProducts");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.ReadModels.DailyOperationSizingBeamsWarpingReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BeamDocumentId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationSizingDocumentId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<double>("EmptyWeight");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("YarnStrands");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationSizingBeamsWarping");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.ReadModels.DailyOperationSizingDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BeamProductResult");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DateTimeOperation");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<double>("EmptyWeight");

                    b.Property<Guid>("MachineDocumentId");

                    b.Property<int?>("MachineSpeed");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<double>("NeReal");

                    b.Property<string>("OperationStatus");

                    b.Property<Guid>("OrderDocumentId");

                    b.Property<string>("RecipeCode");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("TexSQ");

                    b.Property<int?>("Visco");

                    b.Property<double>("YarnStrands");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationSizingDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Sizing.ReadModels.DailyOperationSizingHistoryReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrokenPerShift");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationSizingDocumentId");

                    b.Property<DateTimeOffset>("DateTimeMachine");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("MachineStatus");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid>("OperatorDocumentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid>("ShiftDocumentId");

                    b.Property<string>("SizingBeamNumber");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationSizingHistories");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Warping.ReadModels.DailyOperationWarpingBeamProductReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BeamStatus");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationWarpingDocumentId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<DateTimeOffset>("LatestDateTimeBeamProduct");

                    b.Property<int>("MachineSpeed");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<double>("PressRoll");

                    b.Property<string>("PressRollUom");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("Tention");

                    b.Property<Guid>("WarpingBeamId");

                    b.Property<double>("WarpingTotalBeamLength");

                    b.Property<int>("WarpingTotalBeamLengthUomId");

                    b.Property<string>("WarpingTotalBeamLengthUomUnit");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationWarpingBeamProducts");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Warping.ReadModels.DailyOperationWarpingBrokenCauseReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BrokenCauseId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationWarpingBeamProductId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("TotalBroken");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationWarpingBrokenCauses");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Warping.ReadModels.DailyOperationWarpingDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountOfCones");

                    b.Property<int>("BeamProductResult");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DateTimeOperation");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("OperationStatus");

                    b.Property<Guid>("OrderDocumentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationWarpingDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Warping.ReadModels.DailyOperationWarpingHistoryReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationWarpingDocumentId");

                    b.Property<DateTimeOffset>("DateTimeMachine");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Information");

                    b.Property<string>("MachineStatus");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid?>("OperatorDocumentId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<Guid>("ShiftDocumentId");

                    b.Property<Guid>("WarpingBeamId");

                    b.Property<double>("WarpingBeamLengthPerOperator");

                    b.Property<int>("WarpingBeamLengthPerOperatorUomId");

                    b.Property<string>("WarpingBeamLengthPerOperatorUomUnit");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_DailyOperationWarpingHistories");
                });

            modelBuilder.Entity("Manufactures.Domain.DailyOperations.Warping.ReadModels.WeavingDailyOperationWarpingMachineReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AL");

                    b.Property<string>("BeamNo")
                        .HasMaxLength(100);

                    b.Property<double>("Capacity");

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("Construction");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<DateTime>("Doff");

                    b.Property<string>("Eff");

                    b.Property<string>("Group");

                    b.Property<double>("HNLeft");

                    b.Property<double>("HNMiddle");

                    b.Property<double>("HNRight");

                    b.Property<double>("Length");

                    b.Property<string>("Lot");

                    b.Property<string>("MCNo");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Month");

                    b.Property<int>("MonthId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("SP");

                    b.Property<string>("Shift");

                    b.Property<double>("SpeedMeterPerMinute");

                    b.Property<DateTime>("Start");

                    b.Property<double>("ThreadCut");

                    b.Property<string>("ThreadNo");

                    b.Property<int>("TotalCone");

                    b.Property<string>("Uom");

                    b.Property<string>("WarpType");

                    b.Property<int>("Week");

                    b.Property<string>("Year");

                    b.Property<string>("YearPeriode");

                    b.Property<string>("YearSP");

                    b.HasKey("Identity");

                    b.ToTable("WeavingDailyOperationWarpingMachines");
                });

            modelBuilder.Entity("Manufactures.Domain.Defects.FabricDefect.ReadModels.FabricDefectReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("DefectCategory")
                        .HasMaxLength(255);

                    b.Property<string>("DefectCode")
                        .HasMaxLength(255);

                    b.Property<string>("DefectType")
                        .HasMaxLength(255);

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_FabricDefectDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Estimations.Productions.ReadModels.EstimatedProductionDetailReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ConstructionId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid>("EstimatedProductionDocumentId");

                    b.Property<double>("GradeA");

                    b.Property<double>("GradeB");

                    b.Property<double>("GradeC");

                    b.Property<double?>("GradeD");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid>("OrderId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_EstimationProductDetails");
                });

            modelBuilder.Entity("Manufactures.Domain.Estimations.Productions.ReadModels.EstimatedProductionDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("EstimatedNumber");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<DateTime>("Period");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("UnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_EstimationProductDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Estimations.Productions.ReadModels.WeavingEstimatedProductionReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AL");

                    b.Property<string>("AP1");

                    b.Property<string>("AP2");

                    b.Property<double>("Aval");

                    b.Property<string>("Buyer")
                        .HasMaxLength(50);

                    b.Property<string>("Construction1")
                        .HasMaxLength(300);

                    b.Property<string>("Construction2")
                        .HasMaxLength(300);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<double>("GradeA");

                    b.Property<double>("GradeB");

                    b.Property<double>("GradeC");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Month")
                        .HasMaxLength(50);

                    b.Property<int>("MonthId");

                    b.Property<double>("NumberOrder");

                    b.Property<string>("Plait");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("SPNo");

                    b.Property<string>("Thread");

                    b.Property<double>("Total");

                    b.Property<double>("TotalBale");

                    b.Property<double>("WarpBale");

                    b.Property<double>("WarpLength");

                    b.Property<string>("WarpType");

                    b.Property<string>("WarpXWeft");

                    b.Property<double>("Weft");

                    b.Property<double>("WeftBale");

                    b.Property<string>("WeftType1");

                    b.Property<string>("WeftType2");

                    b.Property<double>("Width");

                    b.Property<string>("YearPeriode");

                    b.Property<string>("YearSP");

                    b.HasKey("Identity");

                    b.ToTable("WeavingEstimatedProductions");
                });

            modelBuilder.Entity("Manufactures.Domain.FabricConstructions.ReadModels.ConstructionYarnDetailReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid>("FabricConstructionDocumentId");

                    b.Property<string>("Information")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<double>("Quantity");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Type");

                    b.Property<Guid>("YarnId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_ConstructionYarnDetails");
                });

            modelBuilder.Entity("Manufactures.Domain.FabricConstructions.ReadModels.FabricConstructionReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountOfWarp");

                    b.Property<int>("AmountOfWeft");

                    b.Property<string>("ConstructionNumber")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("MaterialType");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<double>("ReedSpace");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("TotalYarn");

                    b.Property<string>("WarpType")
                        .HasMaxLength(255);

                    b.Property<string>("WeftType")
                        .HasMaxLength(255);

                    b.Property<int>("Width");

                    b.Property<string>("WovenType")
                        .HasMaxLength(255);

                    b.Property<double>("YarnStrandsAmount");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_ConstructionDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Machines.ReadModels.MachineDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area");

                    b.Property<int>("Block");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int?>("Cutmark");

                    b.Property<string>("CutmarkUom");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Location")
                        .HasMaxLength(255);

                    b.Property<string>("MachineNumber")
                        .HasMaxLength(255);

                    b.Property<Guid?>("MachineTypeId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Process");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("WeavingUnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MachineDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.MachinesPlanning.ReadModels.MachinesPlanningReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Area")
                        .HasMaxLength(255);

                    b.Property<string>("Blok")
                        .HasMaxLength(255);

                    b.Property<string>("BlokKaizen")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid?>("MachineId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UnitDepartementId");

                    b.Property<string>("UserMaintenanceId");

                    b.Property<string>("UserOperatorId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MachinesPlanningDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.MachineTypes.ReadModels.MachineTypeReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("MachineUnit")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("Speed");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255);

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MachineTypeDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Materials.ReadModels.MaterialTypeReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("RingDocuments");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MaterialTypeDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Movements.ReadModels.MovementReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("MovementType");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_MovementDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Operators.ReadModels.OperatorReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Assignment")
                        .HasMaxLength(255);

                    b.Property<string>("CoreAccount");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Group")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<int?>("UnitId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_OperatorDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Orders.ReadModels.OrderReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AllGrade");

                    b.Property<Guid>("ConstructionDocumentId")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(255);

                    b.Property<DateTime>("Period")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("UnitId");

                    b.Property<double>("WarpCompositionCotton");

                    b.Property<double>("WarpCompositionOthers");

                    b.Property<double>("WarpCompositionPoly");

                    b.Property<Guid>("WarpOriginIdOne");

                    b.Property<double>("WeftCompositionCotton");

                    b.Property<double>("WeftCompositionOthers");

                    b.Property<double>("WeftCompositionPoly");

                    b.Property<Guid>("WeftOriginIdOne");

                    b.Property<Guid?>("WeftOriginIdTwo");

                    b.Property<string>("YarnType");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_OrderDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Shifts.ReadModels.ShiftReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<TimeSpan>("EndTime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<TimeSpan>("StartTime");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_ShiftDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.StockCard.ReadModels.StockCardReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BeamDocument");

                    b.Property<Guid>("BeamId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<Guid>("DailyOperationId");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<bool>("Expired");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("StockNumber");

                    b.Property<string>("StockStatus");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_StockCardDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Suppliers.ReadModels.WeavingSupplierDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CoreSupplierId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_SupplierDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.TroubleMachineMonitoring.ReadModels.TroubleMachineMonitoringReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("ContinueDate");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Description");

                    b.Property<Guid?>("MachineDocument");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<Guid?>("OperatorDocument");

                    b.Property<Guid?>("OrderDocument");

                    b.Property<string>("Process");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("StopDate");

                    b.Property<string>("Trouble");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_WarpingMachineTroubleDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.TroubleMachineMonitoring.ReadModels.WeavingTroubleMachineTreeLosesReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Date");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<DateTime>("DownTimeMC");

                    b.Property<DateTime>("Finish");

                    b.Property<string>("Group")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Month");

                    b.Property<int>("MonthId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Shift");

                    b.Property<DateTime>("Start");

                    b.Property<double>("TimePerMinutes");

                    b.Property<string>("WarpingMachineNo");

                    b.Property<string>("YearPeriode");

                    b.HasKey("Identity");

                    b.ToTable("WeavingTroubleMachineTreeLoses");
                });

            modelBuilder.Entity("Manufactures.Domain.YarnNumbers.ReadModels.YarnNumberDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalNumber");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Number")
                        .HasMaxLength(255);

                    b.Property<string>("RingType");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Identity");

                    b.ToTable("Weaving_YarnNumberDocuments");
                });

            modelBuilder.Entity("Manufactures.Domain.Yarns.ReadModels.YarnDocumentReadModel", b =>
                {
                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool?>("Deleted");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("DeletedDate");

                    b.Property<Guid>("MaterialTypeId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset?>("ModifiedDate");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Tags")
                        .HasMaxLength(255);

                    b.Property<Guid>("YarnNumberId");

                    b.HasKey("Identity");

                    b.ToTable("Weaving_YarnDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
